---
layout: post
title: "R语言记录5：描述统计1"
date: 2014-03-12 15:57:02 +0800
comments: true
categories: RSeries R
---
![ariticle 8](/images/article/article8.jpg)
<!-- more -->

*“文章原创，转载请注明出处”*

***

数据的统计分析分为：***描述性统计分析***和***统计推断***两个部分。描述性统计分析，一般又称为探索性统计分析。简单来讲，描述统计就是用简单直观的方法给出数据的一种易于理解的描述，比如说散点图，频率直方图；又或者计算简单的统计量，如均值方差等等。下面先来看看如何计算常用的描述性统计量：

#### 一. 描述性统计量

##### 1. 单组数据
常用的描述性统计量大致有这么几个：

######1. 样本大小。即样本的个数，一般用$n$表示；

######2. 样本均值。即$\overline{X}=\frac{1}{n}\sum_{i=1}^{n}{X_i}$；

######3. 样本方差。即$s^2=\frac{1}{n}\sum_{i=1}^{n}{(X_i-\overline{X})^2}$;

######4. 样本分位数、偏度、峰度等等。

在R语言中，`summary()`函数可以得到样本数据的最小值、最大值、四分位数以及均值。这里我们使用R语言自带的数据集`mtcars`作演示，你可以使用我们之前教过的方法先看看`mtcars`中的数据长什么样子(`head`函数，`??`得到帮助)。

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> str(mtcars) # 可以查看数据集的一些基本信息
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...
> summary(mtcars$mpg)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  10.40   15.42   19.20   20.09   22.80   33.90
```

可以使用`mean`和`sd`函数得到样本均值和样本标准差，`quantile`函数计算样本分位数：

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> mean(mtcars$mpg)
[1] 20.09062
> sd(mtcars$mpg)
[1] 6.026948
> quantile(mtcars$mpg, 0.25)
   25%
15.425
> quantile(mtcars$mpg, c(0.25, 0.75))
   25%    75%
15.425 22.800
```

但是在R的基础包里面并没有计算偏度(skewness)和峰度(kurtosis)的函数，我们可以自定义一个函数，用来计算常用的描述性统计量：

首先给出偏度$\beta_s$与峰度$\beta_k$的计算公式：

$$\beta_s = \frac{E(X-E(X))^3}{[E(X-E(X))^2]^{3/2}}$$

$$\beta_k = \frac{E(X-E(X))^4}{[E(X-E(X))^2]^2} - 3$$

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> desc.stats <- function(x, na.omit=FALSE) { # na.omit=TRUE 表示忽略缺失值
+ 	if (na.omit)
+ 		x <- x[!is.na(x)]
+
+ 	n <- length(x)
+ 	mean <- mean(x)
+ 	var <- var(x)
+ 	sd <- sd(x)
+ 	skew <- sum((x-mean)^3/sd^3)/n
+ 	kurt <- sum((x-mean)^4/sd^4)/n - 3
+
+ 	return(list(mean=mean, Variance=var, skewness=skew, kurtosis=kurt))
+ }
> desc.stats(mtcars$mpg)
$mean
[1] 20.09062

$Variance
[1] 36.3241

$skewness
[1] 0.610655

$kurtosis
[1] -0.372766
```

到此为止，我们就可以使用R语言对一组数据进行简单的探索性分析了。其实，在R语言的很多扩展包里面，都有计算描述性统计量的函数，例如Hmisc包中有`describe()`函数，可以返回变量数目，缺失值数目，均值，分位数等等信息；在fBasic包中有`skewness()`和`kurtosis()`函数，可以分别求偏度与峰度，在该包内还有一个函数，`basicStats()`可以得到大部分的描述性统计量。

##### 2. 多组数据
若是存在多组数据，那么在R中如何对数据进行统计量的计算呢？我们不妨先来试试`summary`函数能否对多组数据做出很好的处理：

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> mtcars.sub <- data.frame(mpg=mtcars$mpg, wt=mtcars$wt) # 取出两个变量
> summary(mtcars.sub)
      mpg              wt
 Min.   :10.40   Min.   :1.513
 1st Qu.:15.43   1st Qu.:2.581
 Median :19.20   Median :3.325
 Mean   :20.09   Mean   :3.217
 3rd Qu.:22.80   3rd Qu.:3.610
 Max.   :33.90   Max.   :5.424
```

显然，`summary`函数能够直接对多组数据进行计算。那么怎么批量地对多组数据使用我们自定义的函数`desc.stats`呢？还记得我们曾经介绍过`sapply`函数吗，想想它的功能就知道如何解决这个问题了吧。

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> sapply(mtcars.sub, desc.stats)
         mpg       wt
mean     20.09062  3.21725
Variance 36.3241   0.957379
skewness 0.610655  0.4231465
kurtosis -0.372766 -0.02271075
```

##### 3. 分组数据
我们知道，很多时候我们会对数据进行分类。像这里的数据`mtcars`，其有变量`am`用来表示自动挡(0)和手动挡(1)。那么我们就需要对其进行分组，然后求出各组的描述性统计量。还记得`tapply()`,`by()`和`aggregate()`函数吗?试试看：

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> mtcars.sub2 <- data.frame(mpg=mtcars$mpg, am=mtcars$am, carb=mtcars$carb)
> tapply(mtcars.sub2$mpg, mtcars.sub2$am, summary)
$`0`
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  10.40   14.95   17.30   17.15   19.20   24.40

$`1`
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  15.00   21.00   22.80   24.39   30.40   33.90

> by(mtcars.sub2$mpg, mtcars.sub2$am, summary)
mtcars.sub2$am: 0
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  10.40   14.95   17.30   17.15   19.20   24.40
------------------------------------------------------------
mtcars.sub2$am: 1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  15.00   21.00   22.80   24.39   30.40   33.90
>
> aggregate(mpg ~ am, mtcars.sub2, summary)
  am mpg.Min. mpg.1st Qu. mpg.Median mpg.Mean mpg.3rd Qu. mpg.Max.
1  0    10.40       14.95      17.30    17.15       19.20    24.40
2  1    15.00       21.00      22.80    24.39       30.40    33.90
```
同样的，如果存在多个分类，我们依旧可以使用上面的函数作出处理：

``` r descriptive_statistics1.R https://github.com/JackyCode/RSeries
> aggregate(mpg ~ am+carb, mtcars.sub2, summary)
  am carb mpg.Min. mpg.1st Qu. mpg.Median mpg.Mean mpg.3rd Qu. mpg.Max.
1  0    1    18.10       19.75      21.40    20.33       21.45    21.50
2  1    1    22.80       26.18      29.85    29.10       32.78    33.90
3  0    2    15.20       16.30      18.95    19.30       21.90    24.40
4  1    2    21.40       24.85      28.20    27.05       30.40    30.40
5  0    3    15.20       15.80      16.40    16.30       16.85    17.30
6  0    4    10.40       11.85      14.30    14.30       16.25    19.20
7  1    4    15.80       18.40      21.00    19.27       21.00    21.00
8  1    6    19.70       19.70      19.70    19.70       19.70    19.70
9  1    8    15.00       15.00      15.00    15.00       15.00    15.00
```

到此为止，就介绍完了如何使用R计算描述性统计量的内容。下一次我们讲看看如何将数据可视化，也就是如何在R中作图以及制表。

